# 设置 Nginx 运行用户
user nginx;
# 自动设置工作进程数，通常根据 CPU 核心数
worker_processes auto;

# 设置错误日志文件路径和日志级别
error_log /var/log/nginx/error.log warn;
# 设置 Nginx 进程 ID 文件路径
pid /var/run/nginx.pid;

# 事件块，配置事件模型
events {
  # 每个工作进程的最大连接数
  worker_connections 1024;
}

# HTTP 块，配置 HTTP 相关参数
http {
  # 包含 MIME 类型配置文件
  include /etc/nginx/mime.types;
  # 设置默认 MIME 类型
  default_type application/octet-stream;

  # 定义缓存区
  proxy_cache_path /var/cache/nginx/my_cache levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;


  # 开启文件缓存
  open_file_cache max=1000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  # 启用 TCP 优化
  sendfile on; # 启用高效文件传输模式
  tcp_nopush on; # 优化数据包发送
  tcp_nodelay on; # 禁用 Nagle 算法
  keepalive_timeout 65; # 保持连接的超时时间
  keepalive_requests 100; # 单个连接的最大请求数量

  # 限制请求速率
  limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

  # # 如果使用 HTTPS，优化 SSL/TLS 配置以提升性能
  # listen 443 ssl;
  # ssl_certificate /path/to/certificate.crt;
  # ssl_certificate_key /path/to/private.key;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;

  # # 如果有多台服务器，可以使用 Nginx 的负载均衡功能。
  # upstream backend {
  #   server 127.0.0.1:9000;
  #   server 127.0.0.1:9001;
  #   server 127.0.0.1:9002;
  # }

  # 开启 Gzip 压缩
  gzip on;
  # 设置 Gzip 压缩级别（1-9，数字越大压缩率越高，但消耗更多 CPU）
  gzip_comp_level 6;
  # 设置最小压缩文件大小为 1KB
  gzip_min_length 1K;
  # 设置 Gzip 压缩的 MIME 类型
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  # 是否在响应头中添加 "Vary: Accept-Encoding"
  gzip_vary on;
  # 是否禁用对不支持 Gzip 的客户端进行压缩
  gzip_disable "MSIE [1-6]\.";
  # 设置 Gzip 缓冲区大小
  gzip_buffers 16 8k;
  # 设置 Gzip 压缩的 HTTP 版本
  gzip_http_version 1.1;

  # # 开启 Brotli 压缩
  # brotli_static on;
  # brotli on;
  # # 设置 Brotli 压缩级别（1-11，默认 6）
  # brotli_comp_level 6;
  # # 设置最小压缩文件大小（小于此大小的文件不压缩）
  # brotli_min_length 1;
  # # 设置 Brotli 压缩的 MIME 类型
  # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  server {
    listen 80;
    server_name localhost;

    # 根目录设置
    root /usr/share/nginx/html;
    index index.html index.htm;

    # 错误页面
    error_page 404 /404.html;
    location = /40x.html {
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }

    # 静态文件处理
    location / {
      #       try_files $uri $uri/ =404;
      limit_req zone=one burst=5 nodelay;
      try_files $uri $uri/ /index.html;
    }

    # 代理设置（如果需要）
    location /api/ {
      proxy_pass http://127.0.0.1:9000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # 配置代理超时，避免请求长时间挂起。
      proxy_connect_timeout 60s; # 连接后端服务器的超时时间
      proxy_send_timeout 60s; # 发送请求到后端服务器的超时时间
      proxy_read_timeout 60s; # 从后端服务器读取响应的超时时间

      # proxy_ssl_verify on; # 验证后端服务器的 SSL 证书
      # proxy_ssl_verify_depth 2; # 验证深度
      # proxy_ssl_trusted_certificate /path/to/trusted_ca.crt; # 受信任的 CA 证书
      # proxy_ssl_session_reuse on; # 重用 SSL 会话

      proxy_hide_header X-Powered-By; # 隐藏后端服务器的敏感头信息
      proxy_hide_header Server;

      add_header X-Frame-Options "SAMEORIGIN"; # 防止点击劫持
      add_header X-Content-Type-Options "nosniff"; # 防止 MIME 类型嗅探
      add_header X-XSS-Protection "1; mode=block"; # 防止 XSS 攻击

      # 启用代理缓冲和缓存，提升性能。
      # 代理缓冲配置
      proxy_buffering on; # 启用缓冲
      proxy_buffer_size 8k; # 单个缓冲区大小
      proxy_buffers 8 16k; # 缓冲区数量和大小
      proxy_busy_buffers_size 32k; # 忙碌缓冲区大小
      proxy_temp_file_write_size 64k; # 临时文件写入大小
      # 代理缓存配置
      proxy_cache my_cache; # 启用代理缓存
      proxy_cache_valid 200 302 1h; # 缓存 200 和 302 响应 1 小时
      proxy_cache_valid 404 5m; # 缓存 404 响应 5 分钟
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

      access_log /var/log/nginx/api_access.log; # 访问日志
      error_log /var/log/nginx/api_error.log; # 错误日志
    }

    # 启用客户端缓存
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
      # 缓存 30 天
      expires 7d;
      add_header Cache-Control "public, no-transform";
    }

  }
}
